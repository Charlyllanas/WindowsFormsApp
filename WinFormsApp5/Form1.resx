<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gtEAAAAASUVORK5CYII=
</value>
  </data>
</root>